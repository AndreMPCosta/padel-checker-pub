version: '3.9'

services:
  web: &app
    build: ./
    command: pipenv run python -m app.main
    restart: always
    env_file:
      - '${ENVIRONMENT_FOLDER}/fastapi.env'
    volumes:
      - ./app/feed/data:/home/padel/padel-checker/app/feed/data
    ports:
      - "8000:8000"
    depends_on:
      - rabbitmq
      - mongodb
  mongodb:
    image: mongo:latest
    restart: always
    env_file:
      - '${ENVIRONMENT_FOLDER}/fastapi.env'
    volumes:
#      - ./environment/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo-js:ro
      - ./mongo-volume:/data/db
    ports:
      - "27017:27017"
  rabbitmq:
    image: rabbitmq:3.9-management
    restart: always
    env_file:
      - '${ENVIRONMENT_FOLDER}/rabbit.env'
    ports:
      # The rabbitMQ management plugin - running on http://localhost:15672
      - "15672:15672"
      - "5672:5672"
  celery:
    <<: *app
    env_file:
      - '${ENVIRONMENT_FOLDER}/celery.env'
    ports: []
    restart: always
    command: ['pipenv', 'run', 'celery', '-A', 'app.feed.celery_worker.celery', 'worker', '-l', 'INFO']
    depends_on:
      - rabbitmq
      - web
  flower:
    <<: *app
    env_file:
      - '${ENVIRONMENT_FOLDER}/celery.env'
    ports:
      - "5555:5555"
    restart: always
    depends_on:
      - rabbitmq
      - celery
    command: ['pipenv', 'run', 'celery', 'flower']
